-- test c and lua triggers: must return only lua triggers
#box.space._space:on_replace()
---
- 0
...
function f() print('test') end
---
...
type(box.space._space:on_replace(f))
---
- function
...
#box.space._space:on_replace()
---
- 1
...
ts = box.schema.space.create('test_space')
---
...
ti = ts:create_index('primary', { type = 'hash' })
---
...
type(ts.on_replace)
---
- function
...
ts.on_replace()
---
- error: 'usage: space:on_replace(function | nil, [function | nil])'
...
ts:on_replace()
---
- []
...
ts:on_replace(123)
---
- error: 'trigger reset: incorrect arguments'
...
function fail(old_tuple, new_tuple) error('test') end
---
...
type(ts:on_replace(fail))
---
- function
...
ts:insert{1, 'b', 'c'}
---
- error: '[string "function fail(old_tuple, new_tuple) error(''te..."]:1: test'
...
ts:get{1}
---
...
ts:on_replace(nil, fail)
---
...
ts:insert{1, 'b', 'c'}
---
- [1, 'b', 'c']
...
ts:get{1}
---
- [1, 'b', 'c']
...
function fail(old_tuple, new_tuple) error('abc') end
---
...
type(ts:on_replace(fail))
---
- function
...
ts:insert{2, 'b', 'c'}
---
- error: '[string "function fail(old_tuple, new_tuple) error(''ab..."]:1: abc'
...
ts:get{2}
---
...
o = nil
---
...
n = nil
---
...
function save_out(told, tnew) o = told n = tnew end
---
...
type(ts:on_replace(save_out, fail))
---
- function
...
ts:insert{2, 'a', 'b', 'c'}
---
- [2, 'a', 'b', 'c']
...
o
---
- null
...
n
---
- [2, 'a', 'b', 'c']
...
ts:replace{2, 'd', 'e', 'f'}
---
- [2, 'd', 'e', 'f']
...
o
---
- [2, 'a', 'b', 'c']
...
n
---
- [2, 'd', 'e', 'f']
...
type(ts:on_replace(function() test = 1 end))
---
- function
...
#ts:on_replace()
---
- 2
...
ts:drop()
---
...
-- test garbage in lua stack
#box.space._space:on_replace()
---
- 1
...
function f2() print('test2') end
---
...
type(box.space._space:on_replace(f2))
---
- function
...
#box.space._space:on_replace()
---
- 2
...
